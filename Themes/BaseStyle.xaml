<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ToDoNote">


    <!-- Базовый стиль для кнопок заголовка -->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource GlobalForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для кнопки "Свернуть" -->
    <Style x:Key="MinimizeButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#203E3E42"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для кнопки "Закрыть" -->
    <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Style.Triggers>    
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0E81123"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для кнопки смены темы -->
    <Style x:Key="ThemeToggleButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Setter Property="ToolTip" Value="Сменить тему"/>
        <Setter Property="Content">
            <Setter.Value>
                <!-- Можно заменить на иконку 🌙 / ☀️ -->
                <TextBlock Text="🌓" FontSize="16"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#203E3E42"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="AddTaskButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource GlobalForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#20d6d6d6"/>
                <Setter Property="Foreground" Value="#0099FF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteTaskButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource GlobalForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3A1A1A"/>
                <Setter Property="Foreground" Value="#FF7777"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль TextBox -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource GlobalForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,7"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для чекбокса -->
    <Style TargetType="{x:Type local:EditableCheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource GlobalForegroundBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding }"  TextWrapping="Wrap"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- Чекбокс -->
                        <Border x:Name="border"
                                Grid.Column="0"
                                Background="Transparent"
                                CornerRadius="4"
                                Width="20"
                                Height="20"
                                Margin="0,0,8,0"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource CheckBoxBorderBrush}">
                            <Path x:Name="checkMark"
                                Data="M 3,8 L 7,12 16,3"
                                Stroke="{DynamicResource GlobalForegroundBrush}"
                                StrokeThickness="2"
                                Stretch="Fill"
                                Fill="Transparent"
                                Visibility="Collapsed" />
                        </Border>

                        <!-- Контент и редактор -->
                        <Grid Grid.Column="1">
                            <ContentPresenter x:Name="contentPresenter"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            RecognizesAccessKey="True" />

                            <TextBox x:Name="textEditor"
                                    Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="Collapsed"
                                    FontSize="{TemplateBinding FontSize}"
                                    Background="{DynamicResource TextBoxBackgroundBrush}"
                                    TextWrapping="Wrap"
                                    BorderThickness="0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource CheckBoxBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource CheckBoxMouseOverBorderBrush}" />
                        </Trigger>

                        <!-- Триггер на редактирование -->
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Value="Editing">
                            <Setter TargetName="textEditor" Property="Visibility" Value="Visible" />
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для ListView -->
    <Style TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border Background="Transparent" 
                                        Padding="10,0,10,0"
                                        CornerRadius="4">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2A2A2D"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
